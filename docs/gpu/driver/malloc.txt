nvGpuOpsGpuMalloc(struct gpuAddressSpace *vaSpace, NvBool isSystemMemory, NvLength length, NvU64 *gpuOffset, struct allocFlags flags, gpuAllocInfo *allocInfo)
// defined in https://github.com/NVIDIA/open-gpu-kernel-modules/blob/main/src/nvidia/src/kernel/rmapi/nv_gpu_ops.c

{
	...
	//Allocate physical memory first.
	nvGpuOpsAllocPhysical(vaSpace->device, isSystemMemory, length, &paOffset, allocInfo);

	...
	//Allocate virtual memory
	nvGpuOpsAllocVirtual(vaSpace, length, &vaOffset, paMemDescHandle, flags, &vaAllocInfo);

	//Map PMem and VMem
	nvGpuOpsMapGpuMemory(vaSpace, vaOffset, length, allocInfo->pageSize, gpuOffset, flags);

}


#L109 // LOCK: acquire device lock

[https://github.com/NVIDIA/open-gpu-kernel-modules/blob/main/src/nvidia/src/kernel/mem_mgr/virtual_mem.c](https://github.com/NVIDIA/open-gpu-kernel-modules/blob/main/src/nvidia/src/kernel/mem_mgr/virtual_mem.c)

#L116 //LOCK and UNLOCK

what if LOCK until the allocation is finished?

[https://github.com/NVIDIA/open-gpu-kernel-modules/blob/main/src/nvidia/src/kernel/mem_mgr/video_mem.c](https://github.com/NVIDIA/open-gpu-kernel-modules/blob/main/src/nvidia/src/kernel/mem_mgr/video_mem.c)

#L552 //pmaAllocatePages

[https://github.com/NVIDIA/open-gpu-kernel-modules/blob/main/src/nvidia/src/kernel/gpu/mem_mgr/phys_mem_allocator/phys_mem_allocator.c](https://github.com/NVIDIA/open-gpu-kernel-modules/blob/main/src/nvidia/src/kernel/gpu/mem_mgr/phys_mem_allocator/phys_mem_allocator.c)
